* ---------------------- PANDOC GENERATED SYNTAX HIGHLIGHTING ---------------------- *

/** Autogenerated by `pandoc -s -o test.html index.md` **/
a.sourceLine {
  display: inline-block;
  line-height: 1.25;
}
a.sourceLine {
  pointer-events: none;
  color: inherit;
  text-decoration: none;
}
a.sourceLine:empty {
  height: 1.2em;
}
.sourceCode {
  overflow: visible;
}

code.sourceCode {
  white-space: pre;
  position: relative;
}
div.sourceCode {
  margin: 1em 0;
}
pre.sourceCode {
  margin: 0;
}

@media screen {
  div.sourceCode {
    overflow: auto;
    padding: 1.5em 0;
  }
}
@media print {
  code.sourceCode {
    white-space: pre-wrap;
  }
  a.sourceLine {
    text-indent: -1em;
    padding-left: 1em;
  }
}
pre.numberSource a.sourceLine {
  position: relative;
  left: -4em;
}
pre.numberSource a.sourceLine::before {
  content: attr(title);
  position: relative;
  left: -1em;
  text-align: right;
  vertical-align: baseline;
  border: none;
  pointer-events: all;
  display: inline-block;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  padding: 0 4px;
  width: 4em;

  /* color: #aaaaaa; <- Commenting this out to use highlightjs instead */
}
pre.numberSource {
  margin-left: 3em;
  border-left: 1px solid #aaaaaa;
  padding-left: 4px;
}

@media screen {
  a.sourceLine::before {
    text-decoration: none;
  }
}

table td,
table th {
  padding: 0.5em;
}

blockquote {
  margin-left: 1em;
  border: 1px solid;
  border-radius: .25rem;
  padding: 1em 1em 1em 1em;
}

blockquote p {
  margin: 0;
}

pre.plaintext {
  padding: 1em;
  padding-left: 2em;
  background-color: #000000;
}

div.sourceCode,
pre:not(.sourceCode) {
  background: rgba(0, 0, 0, 0.664);
}
div.sourceCode code {
  background: rgba(88, 88, 88, 0);
  margin-left: 0em;
}
.sourceCode a.sourceLine {
  margin-left: 3em;
}
pre code {
  /* -webkit-text-fill-color: rgb(228, 228, 228); */
  background-color: #0D1B27;
}
code span.kw {
  -webkit-text-fill-color: #ce93d8;
  font-weight: normal;
  font-style: normal;
} /* Keyword */
code span.dt {
  -webkit-text-fill-color: #14a98b;
  font-weight: normal;
  font-style: normal;
} /* DataType */
code span.dv {
  -webkit-text-fill-color: #75e4f8;
  font-weight: normal;
  font-style: normal;
} /* DecVal */
code span.bn {
  -webkit-text-fill-color: #79abff;
  font-weight: normal;
  font-style: normal;
} /* BaseN */
code span.fl {
  -webkit-text-fill-color: #b6d1ff;
  font-weight: normal;
  font-style: normal;
} /* Float */
code span.ch {
  -webkit-text-fill-color: #fec47e;
  font-weight: normal;
  font-style: normal;
} /* Char */
code span.st {
  -webkit-text-fill-color: #59e0b9;
  font-weight: normal;
  font-style: normal;
} /* String */
code span.co {
  -webkit-text-fill-color: #cfcecd;
  font-weight: normal;
  font-style: italic;
} /* Comment */
code span.ot {
  -webkit-text-fill-color: #f5939d;
  font-weight: normal;
  font-style: normal;
} /* Other */
code span.al {
  -webkit-text-fill-color: #db5351;
  font-weight: normal;
  font-style: normal;
} /* Alert */
code span.fu {
  -webkit-text-fill-color: #a756b5;
  font-weight: normal;
  font-style: normal;
} /* Function */
code span.er {
  -webkit-text-fill-color: #db5351;
  font-weight: normal;
  font-style: normal;
} /* Error */
code span.wa {
  -webkit-text-fill-color: #f06023;
  font-weight: normal;
  font-style: italic;
} /* Warning */
code span.cn {
  -webkit-text-fill-color: #6da2ff;
  font-weight: normal;
  font-style: normal;
} /* Constant */
code span.sc {
  -webkit-text-fill-color: #80f6a7;
  font-weight: normal;
  font-style: normal;
} /* SpecialChar */
code span.vs {
  -webkit-text-fill-color: #8af7ff;
  font-weight: normal;
  font-style: normal;
} /* VerbatimString */
code span.ss {
  -webkit-text-fill-color: #8af7ff;
  font-weight: normal;
  font-style: normal;
} /* SpecialString */
code span.im {
  -webkit-text-fill-color: #ce93d8;
  font-weight: normal;
  font-style: normal;
} /* Import */
code span.va {
  -webkit-text-fill-color: #80f6a7;
  font-weight: normal;
  font-style: normal;
} /* Variable */
code span.cf {
  -webkit-text-fill-color: #ce93d8;
  font-weight: normal;
  font-style: normal;
} /* ControlFlow */
code span.op {
  -webkit-text-fill-color: #ce93d8;
  font-weight: normal;
  font-style: normal;
} /* Operator */
code span.bu {
  -webkit-text-fill-color: #e5a3ff;
  font-weight: normal;
  font-style: normal;
} /* BuiltIn */
code span.ex {
  -webkit-text-fill-color: #fff;
  font-weight: normal;
  font-style: normal;
} /* Extension */
code span.pp {
  -webkit-text-fill-color: #f06023;
  font-weight: normal;
  font-style: normal;
} /* Preprocessor */
code span.at {
  -webkit-text-fill-color: #fff;
  font-weight: normal;
  font-style: normal;
} /* Attribute */
code span.do {
  -webkit-text-fill-color: #cfcecd;
  font-weight: normal;
  font-style: italic;
} /* Documentation */
code span.an {
  -webkit-text-fill-color: #cfcecd;
  font-weight: normal;
  font-style: italic;
} /* Annotation */
code span.cv {
  -webkit-text-fill-color: #cfcecd;
  font-weight: normal;
  font-style: italic;
} /* CommentVar */
code span.in {
  -webkit-text-fill-color: #cfcecd;
  font-weight: normal;
  font-style: italic;
/* } Information */